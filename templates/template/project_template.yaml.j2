apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: project-request
  namespace: openshift-config
objects:
- apiVersion: project.openshift.io/v1
  kind: Project
  metadata:
    annotations:
      openshift.io/description: ${PROJECT_DESCRIPTION}
      openshift.io/display-name: ${PROJECT_DISPLAYNAME}
      openshift.io/requester: ${PROJECT_REQUESTING_USER}
    name: ${PROJECT_NAME}
    creationTimestamp: null
  spec: {}
  status: {}

- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    name: epaas-operators
    namespace: ${PROJECT_NAME}
    creationTimestamp: null
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: edit
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: 2S57-cluster-admin

- apiVersion: networking.k8s.io/v1
  kind: NetworkPolicy
  metadata:
    name: allow-from-same-namespace
  spec:
    podSelector:
    ingress:
    - from:
      - podSelector: {}

- apiVersion: networking.k8s.io/v1
  kind: NetworkPolicy
  metadata:
    name: allow-from-openshift-ingress
  spec:
    ingress:
    - from:
      - namespaceSelector:
          matchLabels:
            network.openshift.io/policy-group: ingress
    podSelector: {}
    policyTypes:
    - Ingress

- apiVersion: networking.k8s.io/v1
  kind: NetworkPolicy
  metadata:
    name: allow-from-openshift-monitoring
  spec:
    ingress:
    - from:
      - namespaceSelector:
          matchLabels:
            name: openshift-monitoring
    podSelector: {}
    policyTypes:
    - Ingress

- apiVersion: networking.k8s.io/v1
  kind: NetworkPolicy
  metadata:
    name: allow-from-phpmyadmin
  spec:
    ingress:
    - from:
      - namespaceSelector:
          matchLabels:
            kubernetes.io/metadata.name: 2s57phpmyadmin-p
    podSelector: {}
    policyTypes:
    - Ingress

- apiVersion: v1
  kind: ResourceQuota
  metadata:
    name: object-quota
    namespace: ${PROJECT_NAME}
  spec:
    hard:
      configmaps: "50"
      limits.ephemeral-storage: 4Gi
      persistentvolumeclaims: "20"
      requests.ephemeral-storage: 2Gi
      secrets: "30"
      services: "10"
      trident-std.storageclass.storage.k8s.io/persistentvolumeclaims: "5"
      trident-std.storageclass.storage.k8s.io/requests.storage: 20Gi
      local-elk.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
      ocs-storagecluster-cephfs.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
      ocs-storagecluster-ceph-rbd.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
      sc-odf.storageclass.storage.k8s.io/persistentvolumeclaims: "0"

- apiVersion: v1
  kind: ResourceQuota
  metadata:
    name: resource-quota-terminating
    namespace: ${PROJECT_NAME}
  spec:
    hard:
      limits.cpu: "8"
      limits.memory: 8Gi
      pods: "20"
      requests.cpu: "2"
      requests.memory: 8Gi
    scopes:
    - Terminating
  
- apiVersion: v1
  kind: ResourceQuota
  metadata:
    name: resource-quota-not-terminating
    namespace: ${PROJECT_NAME}
  spec:
    hard:
      limits.cpu: "8"
      limits.memory: 8Gi
      pods: "20"
      requests.cpu: "2"
      requests.memory: 8Gi
    scopes:
    - NotTerminating

- apiVersion: v1
  kind: LimitRange
  metadata:
    name: limit-range
    namespace: ${PROJECT_NAME}
  spec:
    limits:
    - max:
        storage: 2Gi
      type: openshift.io/Image
    - max:
        cpu: "8"
        memory: 64Gi
      min:
        cpu: 10m
        memory: 12Mi
      type: Pod
    - default:
        cpu: "2"
        memory: 2Gi
      defaultRequest:
        cpu: 20m
        memory: 256Mi
      max:
        cpu: "8"
        memory: 64Gi
      min:
        cpu: 10m
        memory: 12Mi
      type: Container

parameters:
- name: PROJECT_NAME
- name: PROJECT_DISPLAYNAME
- name: PROJECT_DESCRIPTION
- name: PROJECT_ADMIN_USER
- name: PROJECT_REQUESTING_USER
